install.packages("caret")
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
predictions_QDA = data.frame(predict(model_QDA, test))
predictions_QDA = data.frame(predict(model_QDA, test))
predictions_QDA = data.frame(predict(model_QDA, test))
table(predictions_QDA$class, Species = adelie)
predictions_QDA = data.frame(predict(model_QDA, test))
table(predictions_QDA$class, Species = 1)
confusionmatrix(data = predictions_QDA, reference = train)
confusionMatrix(data = predictions_QDA, reference = train)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
model_QDA = qda(adelie~body_mass_g + flipper_length_mm, data = train)
model_QDA
predictions_QDA = data.frame(predict(model_QDA, test))
View(predictions_QDA)
View(predictions_QDA)
confusionMatrix(data = predictions_QDA$class, reference = train$adelie)
predictions_QDA = data.frame(predict(model_QDA, test))
confusionMatrix(data = predictions_QDA$class, reference = train$adelie)
View(predictions_QDA)
data = predictions_QDA$class
data = predictions_QDA$class
reference = train$adelie
confusionMatrix(data = predictions_QDA$class, reference = test$adelie)
data = predictions_QDA$class
predictions_QDA = data.frame(predict(model_QDA, test))
data = predictions_QDA$class
reference = test$adelie
confusionMatrix(data = predictions_QDA$class, reference = test$adelie)
View(predictions_QDA)
data = predictions_QDA$class
data
reference = test$adelie
reference
confusionMatrix(data = predictions_QDA$class, reference = test$adelie)
install.packages("pROC")
library(pROC)
